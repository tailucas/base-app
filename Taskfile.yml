# https://taskfile.dev

version: '3'

includes:
  taskfile: ./app.yml

vars:
  USER_ID: 999
  GROUP_ID: 999

dotenv: ['.env']

tasks:
  default:
    cmds:
      - task: build
  datadir:
    desc: Create system user and associate with docker group.
    cmds:
      - mkdir -p ./data/
      - sudo chown {{.USER_ID}}:{{.GROUP_ID}} ./data/
      - sudo chmod 755 ./data/
      - sudo chmod g+rws ./data/
      - sudo rm -f ./data/app-std* ./data/cron-std* ./data/supervisor.sock
  create-dot-env:
    desc: Dump container environment to local file.
    cmds:
      - rm -f .env
      - echo 'ENCODING="{{.ENCODING}}"' >> .env
      # avoid conflict with builder environment
      - echo 'D_LANG="{{.LANG}}"' >> .env
      - echo 'D_LANGUAGE="{{.LANGUAGE}}"' >> .env
      - echo 'D_LC_ALL="{{.LC_ALL}}"' >> .env
      - echo 'DOCKER_IMAGE="{{.REGISTRY_NAME}}/{{.PROJECT_NAME}}"' >> .env
      - echo 'DEVICE_NAME="{{.PROJECT_NAME}}"' >> .env
      - echo 'SYSLOG_ADDRESS="udp://localhost:514"' >> .env
      - cmd: poetry run python ./cred_tool ENV.{{.PROJECT_NAME}} {{.PROJECT_NAME}} build | jq -r '. | to_entries[] | [.key,.value] | @tsv' | tr '\t' '=' | sed 's/=\(.*\)/="\1"/' >> .env
        ignore_error: true
  docker:
    deps: [create-dot-env]
    desc: Generate a usable docker-compose.yml for Docker build.
    preconditions:
      - poetry -V
      - python -V
      - python3 -V
      - cargo -V
      - rustup -V
      - test -f yaml_interpol
      - test -f docker-compose.template
    cmds:
      - rm -f docker-compose.yml
      - cp docker-compose.template docker-compose.yml
    generates:
      - docker-compose.yml
  java:
    desc: Build Java artifacts in preparation for container build.
    preconditions:
      - java -version
      - javac -version
      - mvn -v
    cmds:
      - mvn package
  push:
    deps: [build]
    desc: Push built image to Docker Hub
    preconditions:
      - docker-compose images
    cmds:
      - docker-compose push
  build:
    deps: [docker, java]
    desc: Clean up volume directory and build container image.
    preconditions:
      - docker-compose -v
    cmds:
      - docker-compose build --progress plain
  run:
    deps: [build, datadir]
    desc: Run docker container
    preconditions:
      - docker -v
      - test -f docker-compose.yml
      - docker ps | grep 1password
      - test -d ./data/
    cmds:
      - docker-compose up
  rund:
    deps: [build, datadir]
    desc: Run docker container and detach
    preconditions:
      - docker -v
      - test -f docker-compose.yml
      - docker ps | grep 1password
      - test -d ./data/
    cmds:
      - docker-compose up -d
  connect:
    cmd: ./connect_to_app.sh {{.DOCKER_APP}}
