# https://taskfile.dev

version: '3'

includes:
  taskfile: ./app.yml

vars:
  USER_ID: 999
  GROUP_ID: 999

tasks:
  default:
    cmds:
      - task: rund
  user:
    desc: Create system user and associate with docker group.
    preconditions:
      - test $(getent group docker | cut -f3 -d ':') = "{{.GROUP_ID}}"
    cmds:
      - id {{.USER_ID}} || (sudo useradd -r -u {{.USER_ID}} -g {{.GROUP_ID}} app && sudo usermod -a -G {{.GROUP_ID}} -u {{.USER_ID}} app)
      - mkdir -p ./data/
      - sudo chown {{.USER_ID}}:{{.GROUP_ID}} ./data/
      - sudo chmod 755 ./data/
      - sudo chmod g+rws ./data/
  setup:
    desc: Generate a usable docker-compose.yml for Docker build.
    preconditions:
      - poetry -V
      - python -V
      - python3 -V
      - test -f cred_tool
      - test -f yaml_interpol
      - test -f docker-compose.template
    cmds:
      - cat docker-compose.template | sed "s~__DOCKER_HOSTNAME__~{{.DOCKER_APP}}~g" > docker-compose.template2
      - poetry run python ./cred_tool ENV.{{.APP}} {{.APP}} | poetry run python ./yaml_interpol services/app/environment docker-compose.template2 > docker-compose-build.yml
      - poetry run python ./cred_tool ENV.{{.APP}} build | poetry run python ./yaml_interpol services/app/build/args docker-compose-build.yml > docker-compose.yml
      - rm -f docker-compose-build.yml
      - rm -f docker-compose.template2
    generates:
      - docker-compose.yml
  java:
    desc: Build Java artifacts in preparation for container build.
    preconditions:
      - java -version
      - javac -version
      - mvn -v
    cmds:
      - mvn compile
      - mvn test
      - mvn package
  build:
    deps: [setup, java]
    desc: Clean up volume directory and build container image.
    preconditions:
      - test -d ./data/
    cmds:
      - sudo rm -f ./data/app-std* ./data/cron-std* ./data/supervisor.sock
      - docker-compose build --progress plain
  run:
    deps: [build]
    desc: Run docker container
    preconditions:
      - test -f docker-compose.yml
      - docker ps | grep 1password
    cmds:
      - docker-compose up
  rund:
    deps: [build]
    desc: Run docker container and detach
    preconditions:
      - test -f docker-compose.yml
      - docker ps | grep 1password
    cmds:
      - docker-compose up -d
  connect:
    cmd: ./connect_to_app.sh {{.DOCKER_APP}}
  dump-app-env:
    desc: Dump container environment to local file.
    preconditions:
      - poetry -V
      - python -V
      - python3 -V
      - test -f cred_tool
    cmds:
      - poetry run python ./cred_tool ENV.{{.APP}} {{.APP}} | jq -r '. | to_entries[] | [.key,.value] | @tsv' | tr '\t' '=' | sed 's/=\(.*\)/="\1"/' > {{.APP}}.env